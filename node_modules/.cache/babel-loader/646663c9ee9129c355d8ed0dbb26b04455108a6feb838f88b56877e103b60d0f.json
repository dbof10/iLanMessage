{"ast":null,"code":"import{onChildAdded,push,ref,remove,set}from'firebase/database';import{addMessage,setError,setLoading,setMessages}from'./chatSlice';import{db}from\"../firebase\";import toast from\"react-hot-toast\";import{uploadFileToFirebaseStorage}from\"../storage/uploadFile\";export const subscribeToMessages=()=>dispatch=>{const messagesRef=ref(db,'messages');onChildAdded(messagesRef,snapshot=>{const data=snapshot.val();dispatch(addMessage(data));});};export const sendTextMessage=(text,sender)=>async dispatch=>{try{const messageRef=push(ref(db,'messages'));await set(messageRef,{type:'text',content:text,sender,timestamp:Date.now()});}catch(error){dispatch(setError(error.message));}};export const sendFileMessage=(file,sender)=>async dispatch=>{dispatch(setLoading(true));try{const downloadURL=await uploadFileToFirebaseStorage(file);const messageRef=push(ref(db,'messages'));await set(messageRef,{type:'file',filename:file.name,downloadURL,sender,timestamp:Date.now()});}catch(error){const errMsg=error.message;dispatch(setError(errMsg));toast.error(`Upload failed: ${errMsg}`);}finally{dispatch(setLoading(false));}};export const clearMessages=()=>async dispatch=>{const messagesRef=ref(db,'messages');await remove(messagesRef);dispatch(setMessages([]));};","map":{"version":3,"names":["onChildAdded","push","ref","remove","set","addMessage","setError","setLoading","setMessages","db","toast","uploadFileToFirebaseStorage","subscribeToMessages","dispatch","messagesRef","snapshot","data","val","sendTextMessage","text","sender","messageRef","type","content","timestamp","Date","now","error","message","sendFileMessage","file","downloadURL","filename","name","errMsg","clearMessages"],"sources":["/Users/229240/Downloads/iLanMessage/src/chat/chatThunk.ts"],"sourcesContent":["import {onChildAdded, push, ref, remove, set} from 'firebase/database';\nimport {addMessage, Message, setError, setLoading, setMessages} from './chatSlice';\nimport {db} from \"../firebase\";\nimport {AppDispatch} from '../store';\nimport toast from \"react-hot-toast\";\nimport {uploadFileToFirebaseStorage} from \"../storage/uploadFile\";\n\nexport const subscribeToMessages = () => (dispatch: AppDispatch) => {\n    const messagesRef = ref(db, 'messages');\n    onChildAdded(messagesRef, (snapshot) => {\n        const data = snapshot.val() as Message;\n        dispatch(addMessage(data));\n    });\n};\n\nexport const sendTextMessage = (text: string, sender: string) => async (dispatch: AppDispatch) => {\n    try {\n        const messageRef = push(ref(db, 'messages'));\n        await set(messageRef, {\n            type: 'text',\n            content: text,\n            sender,\n            timestamp: Date.now(),\n        });\n    } catch (error) {\n        dispatch(setError((error as Error).message));\n    }\n};\n\nexport const sendFileMessage = (file: File, sender: string) => async (dispatch: AppDispatch) => {\n    dispatch(setLoading(true));\n    try {\n        const downloadURL = await uploadFileToFirebaseStorage(file);\n\n        const messageRef = push(ref(db, 'messages'));\n        await set(messageRef, {\n            type: 'file',\n            filename: file.name,\n            downloadURL,\n            sender,\n            timestamp: Date.now(),\n        });\n    } catch (error) {\n        const errMsg = (error as Error).message;\n        dispatch(setError(errMsg));\n        toast.error(`Upload failed: ${errMsg}`);\n    } finally {\n        dispatch(setLoading(false));\n    }\n};\n\n\nexport const clearMessages = () => async (dispatch: AppDispatch) => {\n    const messagesRef = ref(db, 'messages');\n    await remove(messagesRef);\n    dispatch(setMessages([]));\n};\n"],"mappings":"AAAA,OAAQA,YAAY,CAAEC,IAAI,CAAEC,GAAG,CAAEC,MAAM,CAAEC,GAAG,KAAO,mBAAmB,CACtE,OAAQC,UAAU,CAAWC,QAAQ,CAAEC,UAAU,CAAEC,WAAW,KAAO,aAAa,CAClF,OAAQC,EAAE,KAAO,aAAa,CAE9B,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CACnC,OAAQC,2BAA2B,KAAO,uBAAuB,CAEjE,MAAO,MAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAOC,QAAqB,EAAK,CAChE,KAAM,CAAAC,WAAW,CAAGZ,GAAG,CAACO,EAAE,CAAE,UAAU,CAAC,CACvCT,YAAY,CAACc,WAAW,CAAGC,QAAQ,EAAK,CACpC,KAAM,CAAAC,IAAI,CAAGD,QAAQ,CAACE,GAAG,CAAC,CAAY,CACtCJ,QAAQ,CAACR,UAAU,CAACW,IAAI,CAAC,CAAC,CAC9B,CAAC,CAAC,CACN,CAAC,CAED,MAAO,MAAM,CAAAE,eAAe,CAAGA,CAACC,IAAY,CAAEC,MAAc,GAAK,KAAO,CAAAP,QAAqB,EAAK,CAC9F,GAAI,CACA,KAAM,CAAAQ,UAAU,CAAGpB,IAAI,CAACC,GAAG,CAACO,EAAE,CAAE,UAAU,CAAC,CAAC,CAC5C,KAAM,CAAAL,GAAG,CAACiB,UAAU,CAAE,CAClBC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAEJ,IAAI,CACbC,MAAM,CACNI,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CACxB,CAAC,CAAC,CACN,CAAE,MAAOC,KAAK,CAAE,CACZd,QAAQ,CAACP,QAAQ,CAAEqB,KAAK,CAAWC,OAAO,CAAC,CAAC,CAChD,CACJ,CAAC,CAED,MAAO,MAAM,CAAAC,eAAe,CAAGA,CAACC,IAAU,CAAEV,MAAc,GAAK,KAAO,CAAAP,QAAqB,EAAK,CAC5FA,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,GAAI,CACA,KAAM,CAAAwB,WAAW,CAAG,KAAM,CAAApB,2BAA2B,CAACmB,IAAI,CAAC,CAE3D,KAAM,CAAAT,UAAU,CAAGpB,IAAI,CAACC,GAAG,CAACO,EAAE,CAAE,UAAU,CAAC,CAAC,CAC5C,KAAM,CAAAL,GAAG,CAACiB,UAAU,CAAE,CAClBC,IAAI,CAAE,MAAM,CACZU,QAAQ,CAAEF,IAAI,CAACG,IAAI,CACnBF,WAAW,CACXX,MAAM,CACNI,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CACxB,CAAC,CAAC,CACN,CAAE,MAAOC,KAAK,CAAE,CACZ,KAAM,CAAAO,MAAM,CAAIP,KAAK,CAAWC,OAAO,CACvCf,QAAQ,CAACP,QAAQ,CAAC4B,MAAM,CAAC,CAAC,CAC1BxB,KAAK,CAACiB,KAAK,CAAC,kBAAkBO,MAAM,EAAE,CAAC,CAC3C,CAAC,OAAS,CACNrB,QAAQ,CAACN,UAAU,CAAC,KAAK,CAAC,CAAC,CAC/B,CACJ,CAAC,CAGD,MAAO,MAAM,CAAA4B,aAAa,CAAGA,CAAA,GAAM,KAAO,CAAAtB,QAAqB,EAAK,CAChE,KAAM,CAAAC,WAAW,CAAGZ,GAAG,CAACO,EAAE,CAAE,UAAU,CAAC,CACvC,KAAM,CAAAN,MAAM,CAACW,WAAW,CAAC,CACzBD,QAAQ,CAACL,WAAW,CAAC,EAAE,CAAC,CAAC,CAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}