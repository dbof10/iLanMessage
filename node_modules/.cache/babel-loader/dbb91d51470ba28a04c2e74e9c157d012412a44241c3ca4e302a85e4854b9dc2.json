{"ast":null,"code":"import { onChildAdded, push, ref, remove, set } from 'firebase/database';\nimport { addMessage, setError, setLoading, setMessages } from './chatSlice';\nimport { db } from \"../firebase\";\nimport toast from \"react-hot-toast\";\nimport { uploadFileToFirebaseStorage } from \"../storage/uploadFile\";\nexport const subscribeToMessages = () => dispatch => {\n  const messagesRef = ref(db, 'messages');\n  onChildAdded(messagesRef, snapshot => {\n    const data = snapshot.val();\n    dispatch(addMessage(data));\n  });\n};\nexport const sendTextMessage = (text, sender) => async dispatch => {\n  try {\n    const messageRef = push(ref(db, 'messages'));\n    await set(messageRef, {\n      type: 'text',\n      content: text,\n      sender,\n      timestamp: Date.now()\n    });\n  } catch (error) {\n    dispatch(setError(error.message));\n  }\n};\nexport const sendFileMessage = (file, sender) => async dispatch => {\n  dispatch(setLoading(true));\n  try {\n    const downloadURL = await uploadFileToFirebaseStorage(file);\n    const messageRef = push(ref(db, 'messages'));\n    await set(messageRef, {\n      type: 'file',\n      filename: file.name,\n      downloadURL,\n      sender,\n      timestamp: Date.now()\n    });\n  } catch (error) {\n    const errMsg = error.message;\n    dispatch(setError(errMsg));\n    toast.error(`Upload failed: ${errMsg}`);\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\nexport const clearMessages = () => async dispatch => {\n  const messagesRef = ref(db, 'messages');\n  await remove(messagesRef);\n  dispatch(setMessages([]));\n};","map":{"version":3,"names":["onChildAdded","push","ref","remove","set","addMessage","setError","setLoading","setMessages","db","toast","uploadFileToFirebaseStorage","subscribeToMessages","dispatch","messagesRef","snapshot","data","val","sendTextMessage","text","sender","messageRef","type","content","timestamp","Date","now","error","message","sendFileMessage","file","downloadURL","filename","name","errMsg","clearMessages"],"sources":["/Users/229240/Downloads/iLanMessage/src/chat/chatThunk.ts"],"sourcesContent":["import {onChildAdded, push, ref, remove, set} from 'firebase/database';\nimport {addMessage, Message, setError, setLoading, setMessages} from './chatSlice';\nimport {db} from \"../firebase\";\nimport {AppDispatch} from '../store';\nimport toast from \"react-hot-toast\";\nimport {uploadFileToFirebaseStorage} from \"../storage/uploadFile\";\n\nexport const subscribeToMessages = () => (dispatch: AppDispatch) => {\n    const messagesRef = ref(db, 'messages');\n    onChildAdded(messagesRef, (snapshot) => {\n        const data = snapshot.val() as Message;\n        dispatch(addMessage(data));\n    });\n};\n\nexport const sendTextMessage = (text: string, sender: string) => async (dispatch: AppDispatch) => {\n    try {\n        const messageRef = push(ref(db, 'messages'));\n        await set(messageRef, {\n            type: 'text',\n            content: text,\n            sender,\n            timestamp: Date.now(),\n        });\n    } catch (error) {\n        dispatch(setError((error as Error).message));\n    }\n};\n\nexport const sendFileMessage = (file: File, sender: string) => async (dispatch: AppDispatch) => {\n    dispatch(setLoading(true));\n    try {\n        const downloadURL = await uploadFileToFirebaseStorage(file);\n\n        const messageRef = push(ref(db, 'messages'));\n        await set(messageRef, {\n            type: 'file',\n            filename: file.name,\n            downloadURL,\n            sender,\n            timestamp: Date.now(),\n        });\n    } catch (error) {\n        const errMsg = (error as Error).message;\n        dispatch(setError(errMsg));\n        toast.error(`Upload failed: ${errMsg}`);\n    } finally {\n        dispatch(setLoading(false));\n    }\n};\n\n\nexport const clearMessages = () => async (dispatch: AppDispatch) => {\n    const messagesRef = ref(db, 'messages');\n    await remove(messagesRef);\n    dispatch(setMessages([]));\n};\n"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,GAAG,QAAO,mBAAmB;AACtE,SAAQC,UAAU,EAAWC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAO,aAAa;AAClF,SAAQC,EAAE,QAAO,aAAa;AAE9B,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAAQC,2BAA2B,QAAO,uBAAuB;AAEjE,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAOC,QAAqB,IAAK;EAChE,MAAMC,WAAW,GAAGZ,GAAG,CAACO,EAAE,EAAE,UAAU,CAAC;EACvCT,YAAY,CAACc,WAAW,EAAGC,QAAQ,IAAK;IACpC,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAY;IACtCJ,QAAQ,CAACR,UAAU,CAACW,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,eAAe,GAAGA,CAACC,IAAY,EAAEC,MAAc,KAAK,MAAOP,QAAqB,IAAK;EAC9F,IAAI;IACA,MAAMQ,UAAU,GAAGpB,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,UAAU,CAAC,CAAC;IAC5C,MAAML,GAAG,CAACiB,UAAU,EAAE;MAClBC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAEJ,IAAI;MACbC,MAAM;MACNI,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZd,QAAQ,CAACP,QAAQ,CAAEqB,KAAK,CAAWC,OAAO,CAAC,CAAC;EAChD;AACJ,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,IAAU,EAAEV,MAAc,KAAK,MAAOP,QAAqB,IAAK;EAC5FA,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC;EAC1B,IAAI;IACA,MAAMwB,WAAW,GAAG,MAAMpB,2BAA2B,CAACmB,IAAI,CAAC;IAE3D,MAAMT,UAAU,GAAGpB,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,UAAU,CAAC,CAAC;IAC5C,MAAML,GAAG,CAACiB,UAAU,EAAE;MAClBC,IAAI,EAAE,MAAM;MACZU,QAAQ,EAAEF,IAAI,CAACG,IAAI;MACnBF,WAAW;MACXX,MAAM;MACNI,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMO,MAAM,GAAIP,KAAK,CAAWC,OAAO;IACvCf,QAAQ,CAACP,QAAQ,CAAC4B,MAAM,CAAC,CAAC;IAC1BxB,KAAK,CAACiB,KAAK,CAAC,kBAAkBO,MAAM,EAAE,CAAC;EAC3C,CAAC,SAAS;IACNrB,QAAQ,CAACN,UAAU,CAAC,KAAK,CAAC,CAAC;EAC/B;AACJ,CAAC;AAGD,OAAO,MAAM4B,aAAa,GAAGA,CAAA,KAAM,MAAOtB,QAAqB,IAAK;EAChE,MAAMC,WAAW,GAAGZ,GAAG,CAACO,EAAE,EAAE,UAAU,CAAC;EACvC,MAAMN,MAAM,CAACW,WAAW,CAAC;EACzBD,QAAQ,CAACL,WAAW,CAAC,EAAE,CAAC,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}