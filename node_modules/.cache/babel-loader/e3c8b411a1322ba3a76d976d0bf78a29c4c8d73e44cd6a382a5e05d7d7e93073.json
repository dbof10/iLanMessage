{"ast":null,"code":"var _jsxFileName = \"/Users/229240/Downloads/iLanMessage/src/components/chatInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { clearMessages, sendTextMessage } from '../chat/chatThunk';\nimport { useDispatch } from 'react-redux';\nimport styles from './ChatInput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput() {\n  _s();\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n  const handleSend = () => {\n    if (text.trim()) {\n      dispatch(sendTextMessage(text, 'mac1'));\n      setText('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleClear = () => {\n    if (window.confirm('Are you sure you want to clear all messages?')) {\n      dispatch(clearMessages());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      onKeyDown: handleKeyPress,\n      placeholder: \"Type your message...\",\n      className: styles.input,\n      rows: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      className: styles.sendButton,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      className: styles.clearButton,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatInput, \"r9r78xgnLdvyT5jgPbF3qGUb+sU=\", false, function () {\n  return [useDispatch];\n});\n_c = ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","clearMessages","sendTextMessage","useDispatch","styles","jsxDEV","_jsxDEV","ChatInput","_s","dispatch","text","setText","handleSend","trim","handleKeyPress","e","key","preventDefault","handleClear","window","confirm","className","container","children","value","onChange","target","onKeyDown","placeholder","input","rows","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sendButton","clearButton","_c","$RefreshReg$"],"sources":["/Users/229240/Downloads/iLanMessage/src/components/chatInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { AppDispatch } from '../store';\nimport { clearMessages, sendTextMessage } from '../chat/chatThunk';\nimport { useDispatch } from 'react-redux';\nimport styles from './ChatInput.module.css';\n\nexport default function ChatInput() {\n    const dispatch = useDispatch<AppDispatch>();\n    const [text, setText] = useState('');\n\n    const handleSend = () => {\n        if (text.trim()) {\n            dispatch(sendTextMessage(text, 'mac1'));\n            setText('');\n        }\n    };\n\n    const handleKeyPress = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            handleSend();\n        }\n    };\n\n    const handleClear = () => {\n        if (window.confirm('Are you sure you want to clear all messages?')) {\n            dispatch(clearMessages());\n        }\n    };\n\n    return (\n        <div className={styles.container}>\n          <textarea\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              onKeyDown={handleKeyPress}\n              placeholder=\"Type your message...\"\n              className={styles.input}\n              rows={3}\n          />\n            <button onClick={handleSend} className={styles.sendButton}>\n                Send\n            </button>\n            <button onClick={handleClear} className={styles.clearButton}>\n                Clear\n            </button>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,aAAa,EAAEC,eAAe,QAAQ,mBAAmB;AAClE,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,WAAW,CAAc,CAAC;EAC3C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIF,IAAI,CAACG,IAAI,CAAC,CAAC,EAAE;MACbJ,QAAQ,CAACP,eAAe,CAACQ,IAAI,EAAE,MAAM,CAAC,CAAC;MACvCC,OAAO,CAAC,EAAE,CAAC;IACf;EACJ,CAAC;EAED,MAAMG,cAAc,GAAIC,CAA2C,IAAK;IACpE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnBD,CAAC,CAACE,cAAc,CAAC,CAAC;MAClBL,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIC,MAAM,CAACC,OAAO,CAAC,8CAA8C,CAAC,EAAE;MAChEX,QAAQ,CAACR,aAAa,CAAC,CAAC,CAAC;IAC7B;EACJ,CAAC;EAED,oBACIK,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACkB,SAAU;IAAAC,QAAA,gBAC/BjB,OAAA;MACIkB,KAAK,EAAEd,IAAK;MACZe,QAAQ,EAAGV,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MACzCG,SAAS,EAAEb,cAAe;MAC1Bc,WAAW,EAAC,sBAAsB;MAClCP,SAAS,EAAEjB,MAAM,CAACyB,KAAM;MACxBC,IAAI,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACA5B,OAAA;MAAQ6B,OAAO,EAAEvB,UAAW;MAACS,SAAS,EAAEjB,MAAM,CAACgC,UAAW;MAAAb,QAAA,EAAC;IAE3D;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT5B,OAAA;MAAQ6B,OAAO,EAAEjB,WAAY;MAACG,SAAS,EAAEjB,MAAM,CAACiC,WAAY;MAAAd,QAAA,EAAC;IAE7D;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAC1B,EAAA,CA1CuBD,SAAS;EAAA,QACZJ,WAAW;AAAA;AAAAmC,EAAA,GADR/B,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}